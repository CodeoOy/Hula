// Variables
@import 'variables';
@import 'bootstrap-icons';
// Configuration
@import '../node_modules/bootstrap/scss/functions';
@import '../node_modules/bootstrap/scss/variables';
@import '../node_modules/bootstrap/scss/mixins';
@import '../node_modules/bootstrap/scss/utilities';

// Layout & components
@import '../node_modules/bootstrap/scss/root';
@import '../node_modules/bootstrap/scss/reboot';
@import '../node_modules/bootstrap/scss/type';
// @import '../node_modules/bootstrap/scss/images';
@import '../node_modules/bootstrap/scss/containers';
@import '../node_modules/bootstrap/scss/grid';
@import '../node_modules/bootstrap/scss/tables';
@import '../node_modules/bootstrap/scss/forms';
@import '../node_modules/bootstrap/scss/buttons';
@import '../node_modules/bootstrap/scss/transitions';
@import '../node_modules/bootstrap/scss/dropdown';
@import '../node_modules/bootstrap/scss/button-group';
@import '../node_modules/bootstrap/scss/nav';
@import '../node_modules/bootstrap/scss/navbar';
@import '../node_modules/bootstrap/scss/card';
@import '../node_modules/bootstrap/scss/accordion';
// @import '../node_modules/bootstrap/scss/breadcrumb';
// @import '../node_modules/bootstrap/scss/pagination';
@import '../node_modules/bootstrap/scss/badge';
// @import '../node_modules/bootstrap/scss/alert';
// @import '../node_modules/bootstrap/scss/progress';
@import '../node_modules/bootstrap/scss/list-group';
@import '../node_modules/bootstrap/scss/close';
// @import '../node_modules/bootstrap/scss/toasts';
@import '../node_modules/bootstrap/scss/modal';
@import '../node_modules/bootstrap/scss/tooltip';
// @import '../node_modules/bootstrap/scss/popover';
// @import '../node_modules/bootstrap/scss/carousel';
// @import '../node_modules/bootstrap/scss/spinners';

// Helpers
@import '../node_modules/bootstrap/scss/helpers';

// Utilities
$utilities: map-merge(
	$utilities, (
		"color": map-merge(
			map-get($utilities, "color"), (
				values: map-merge(
					map-get(map-get($utilities, "color"), "values"),
					(yellow: $yellow),
				),
			),
		),
	)
);

$utilities: map-merge(
	$utilities, (
		"width": map-merge(
			map-get($utilities, "width"),
			( responsive: true ),
		),
	)
);

$utilities: map-merge(
	$utilities, (
		"display": map-merge(
			map-get($utilities, "display"), (
				values: join(map-get(map-get($utilities, "display"), "values"), (
					table-header-group,
					table-row-group,
				)),
			),
		),
	)
);

@import '../node_modules/bootstrap/scss/utilities/api';

// Extend Bootstrap

:root {
	--color-scheme: #{$color-scheme};
	--#{$variable-prefix}component-active-bg: #{$component-active-bg};
}

.nav-tabs {
	overflow-y: hidden !important;
	
    scrollbar-width: none;
	&::-webkit-scrollbar {
		display: none;
	}

	& + .card {
		border-top-right-radius: 0 !important;
		border-top-left-radius: 0 !important;
	}
}

.btn-unstyled {
	@extend .btn-link;
	margin: 0;
	border: 0;
	padding: 0;
	vertical-align: inherit;
	border-radius: inherit;
	text-align: inherit;
}

.list-group-transparent > .list-group-item {
	background-color: transparent;
	color: inherit;
}

.badge-skill {
	position: relative;
	background-color: $skill-badge-bg-color;
	color: $skill-badge-text-color;
	overflow: hidden;

	&-mandatory {
		background-color: $skill-badge-mandatory-bg-color;
		color: $skill-badge-mandatory-text-color;
	}

	&::before {
		content: '';
		position: absolute;
		bottom: 0;
		left: 0;
		width: var(--progress);
		height: 0.2rem;
		background: currentColor;
		opacity: 0.66;
	}
}

@if ($input-invalid-bg) {
	.form-control.is-invalid,
	.form-select.is-invalid {
		background-color: $input-invalid-bg;
	}
}

@media screen and (max-width: #{map-get($grid-breakpoints, 'md')}) {
	.table-stack-mobile {
		display: block;

		& > thead {
			display: none;
		}

		& > tbody {
			display: table;
			width: 100%;

			& > tr {
				display: table-row-group;

				& > td {
					display: table-row;
					
					&[data-label]::before {
						content: attr(data-label);
					}
				}
			}
		}
		
		& > tbody >tr > td[data-label]::before,
		&-cell {
			display: table-cell;
			padding: inherit;
			text-align: left;
			// Use Bootstrap's zebra colors
			background-color: inherit;
			box-shadow: inherit;
		}
	}
}

// Custom styles

// Date fields are too tall in Safari
.form-control::-webkit-datetime-edit {
	vertical-align: middle;
}

._vue-flash-msg-body {
	z-index: $zindex-popover;
}

.flip-list-move {
	transition: transform 0.2s;
}

.gradient:not([disabled]) {
	background-image: var(--bs-gradient);
}

.td-actions {
	opacity: 0.1;

	td:hover &,
	td:focus-within & {
		opacity: 1;
	}
}

#hula {
	height: 100vh;
	display: flex;
	flex-direction: column;
}

#main {
	flex: 1 0 auto;
	display: flex;
	flex-direction: column;
}

.hula-logo {
	fill: currentColor;

	#hoop {
		transition: 0.7s ease-in-out;
		transform-origin: 400px 431px;
		transform: rotate(0);
	}

	&:hover {
		#hoop {
			transform: rotate(720deg);
		}
	}
}

.tier {
	@if ($tier-row-bg-color) {
		--#{$variable-prefix}table-accent-bg: #{$tier-row-bg-color} !important;
		--#{$variable-prefix}table-bg: #{$tier-row-bg-color} !important;
	}
	--tier-bg-color: #{$tier-bg-color};
	--tier-text-color: #{$tier-text-color};

	&-1 {
		@if ($tier-1-row-bg-color) {
			--#{$variable-prefix}table-accent-bg: #{$tier-1-row-bg-color} !important;
			--#{$variable-prefix}table-bg: #{$tier-1-row-bg-color} !important;
		}
		--tier-bg-color: #{$tier-1-bg-color};
		--tier-text-color: #{$tier-1-text-color};
	}

	&-2 {
		@if ($tier-2-row-bg-color) {
			--#{$variable-prefix}table-accent-bg: #{$tier-2-row-bg-color} !important;
			--#{$variable-prefix}table-bg: #{$tier-2-row-bg-color} !important;
		}
		--tier-bg-color: #{$tier-2-bg-color};
		--tier-text-color: #{$tier-2-text-color};
	}

	&-circle {
		position: relative;
		width: $tier-size;
		margin: calc((#{$tier-size} - var(--bs-body-line-height) * 1rem) / -2) 0;
		line-height: $tier-size;
		text-align: center;
		border-radius: 50%;
		background-color: var(--tier-bg-color);
		color: var(--tier-text-color);
	}
}

.shake {
	animation: shake 1s cubic-bezier(0.75, 0, 0.25, 1);
}

@keyframes shake {
	10%, 90% {
		transform: translate3d(-1px, 0, 0);
	}

	20%, 80% {
		transform: translate3d(2px, 0, 0);
	}

	30%, 50%, 70% {
		transform: translate3d(-4px, 0, 0);
	}

	40%, 60% {
		transform: translate3d(4px, 0, 0);
	}
}
